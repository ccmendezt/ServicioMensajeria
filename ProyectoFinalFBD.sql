/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 15.2 		*/
/*  Created On : 11-oct.-2021 11:17:20 a. m. 				*/
/*  DBMS       : PostgreSQL 						*/
/* ---------------------------------------------------- */

/* Drop Sequences for Autonumber Columns */

 

 

 

 

 

 

 

/* Drop Tables */

DROP TABLE IF EXISTS Ciudad CASCADE
;

DROP TABLE IF EXISTS Cliente CASCADE
;

DROP TABLE IF EXISTS Direccion CASCADE
;

DROP TABLE IF EXISTS HorarioLaboral CASCADE
;

DROP TABLE IF EXISTS Mensajero CASCADE
;

DROP TABLE IF EXISTS PagoMensajero CASCADE
;

DROP TABLE IF EXISTS Servicio CASCADE
;

DROP TABLE IF EXISTS Tipo_Paquete CASCADE
;

/* Create Tables */

CREATE TABLE Ciudad
(
	k_idCiudad smallserial NOT NULL,
	n_nombreCiudad varchar(6) NOT NULL,
	q_precioTrayecto integer NOT NULL,
	t_porcentajeComision real NOT NULL
)
;

CREATE TABLE Cliente
(
	k_tipoDoc varchar(2) NOT NULL,	-- Número único que identificará a cada cliente dentro del sistema.
	k_nroDoc bigint NOT NULL,
	n_nombres varchar(25) NOT NULL,	-- Nombres del cliente ya registrado en el sistema.
	n_apellidos varchar(25) NOT NULL,	-- Apellidos del cliente ya registrado en el sistema.
	o_email varchar(30) NOT NULL,	-- Correo electrónico asociado al cliente
	q_telefonoCelular bigint NOT NULL	-- Número de teléfono asociado al cliente
)
;

CREATE TABLE Direccion
(
	k_codigo smallserial NOT NULL,	-- Codigo de la dirección asociada a un servicio.
	n_direccion varchar(50) NOT NULL,	-- Dirección en la que se debe realizar alguna actividad.
	n_actividad varchar(50) NOT NULL,	-- Descripción de la actividad que se tendrá que realizar en una dirección
	k_idServicio smallserial NOT NULL	-- Identificador único del servicio asociado a las direcciones
)
;

CREATE TABLE HorarioLaboral
(
	k_idHorario smallserial NOT NULL,
	n_nombreDia varchar(9) NOT NULL,	-- Domingo Miercoles
	f_horaInicio time without time zone NOT NULL,
	f_horaFin time without time zone NOT NULL,
	k_nroDoc bigint NOT NULL,
	k_tipoDoc char(2) NOT NULL
)
;

CREATE TABLE Mensajero
(
	k_tipoDoc char(2) NOT NULL,	-- TI CC CE
	k_nroDoc bigint NOT NULL,
	n_nombre varchar(25) NOT NULL,
	n_apellido varchar(25) NOT NULL,
	o_seguridadSocial boolean NOT NULL,
	i_sexo char(1) NOT NULL,
	i_tipoTransporte char(2) NOT NULL,	-- DC PQ PM PG
	i_tipoMedio char(1) NOT NULL,	-- B - Bicicleta M - Motocicleta
	o_email varchar(30) NOT NULL,
	q_telefonoCelular bigint NOT NULL,
	n_nacionalidad varchar(20) NOT NULL,
	f_fechaNacimiento date NOT NULL
)
;

CREATE TABLE PagoMensajero
(
	k_idPago smallserial NOT NULL,
	f_inicio date NOT NULL,
	f_fin date NOT NULL,
	v_valor numeric(9,2) NOT NULL,
	k_nroDoc bigint NOT NULL,
	k_tipoDoc char(2) NOT NULL
)
;

CREATE TABLE Servicio
(
	k_idServicio smallserial NOT NULL,	-- Número único de identificación de un servicio asociado asociado a un cliente
	f_inicial date NOT NULL,	-- Fecha y hora en la que se inicia un servicio
	f_horaInicial time without time zone NOT NULL,
	i_idaYvuelta char(1) NOT NULL,	-- Indicador del tipo de servicio solicitador. Será <<I>> si el servicio es solo Ida, y será <<V>> si el servicio es de Ida y Vuelta.
	v_costo real NOT NULL,	-- Valor total del costo del servicio solicitado
	f_cambioEstado timestamp without time zone NOT NULL,	-- Fecha en la que un mensajero Acepta, Finaliza o Reporta algún cambio en el servicio.
	n_cmtCambioEstado varchar(30) NOT NULL,	-- Comentario asociado a la fecha en la que cambia el estado del servicio
	i_medioPago char(1) NOT NULL,	-- Indicador del medio de pago del servicio. <<E>> será el indicador de pago en efectivo y <<P>> será el indicador para el pago por medio de PSE.
	k_idCiudad smallserial NOT NULL,
	k_tipoDocCli varchar(2) NOT NULL,
	k_nroDocCli bigint NOT NULL,
	q_calificacion smallint NULL,
	k_idTipoPaquete char(2) NOT NULL,
	k_nroDocMen bigint NULL,
	k_tipoDocMen char(2) NULL
)
;

CREATE TABLE Tipo_Paquete
(
	k_idTipoP char(2) NOT NULL,	-- DC PQ PM PG
	n_nombreTipoP varchar(15) NOT NULL,	-- Nombre asociado al volumen del paquete
	q_tarifaPaquete numeric(5) NOT NULL
)
;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE Ciudad ADD CONSTRAINT PK_Ciudad
	PRIMARY KEY (k_idCiudad)
;

ALTER TABLE Ciudad ADD CONSTRAINT CK_precioTrayecto CHECK (q_precioTrayecto>0)
;

ALTER TABLE Ciudad ADD CONSTRAINT CK_porcentajeComision CHECK (t_porcentajeComision>0)
;

ALTER TABLE Cliente ADD CONSTRAINT PK_Cliente
	PRIMARY KEY (k_tipoDoc,k_nroDoc)
;

ALTER TABLE Cliente 
  ADD CONSTRAINT UK_email UNIQUE (o_email)
;

ALTER TABLE Cliente 
  ADD CONSTRAINT UK_telefonoCelularCli UNIQUE (q_telefonoCelular)
;

ALTER TABLE Cliente ADD CONSTRAINT CK_telefonoCelular CHECK (Q_telefonoCelular>0)
;

ALTER TABLE Cliente ADD CONSTRAINT CK_tipoDoc CHECK (k_tipoDoc IN ('CC','CE'))
;

ALTER TABLE Direccion ADD CONSTRAINT PK_Direccion
	PRIMARY KEY (k_codigo,k_idServicio)
;

ALTER TABLE HorarioLaboral ADD CONSTRAINT PK_HorarioLaboral
	PRIMARY KEY (k_idHorario)
;

ALTER TABLE HorarioLaboral ADD CONSTRAINT CK_horaFin CHECK (f_horaFin>f_horaInicio)
;

ALTER TABLE Mensajero ADD CONSTRAINT PK_Mensajero
	PRIMARY KEY (k_nroDoc,k_tipoDoc)
;

ALTER TABLE Mensajero 
  ADD CONSTRAINT UK_correo UNIQUE (o_email)
;

ALTER TABLE Mensajero 
  ADD CONSTRAINT UK_telefonoCelularMen UNIQUE (q_telefonoCelular)
;

ALTER TABLE Mensajero 
  ADD CONSTRAINT UK_nroDocumento UNIQUE (k_nroDoc)
;

ALTER TABLE Mensajero ADD CONSTRAINT CK_tipoDocumento CHECK (k_tipoDoc IN ('CC','CE'))
;

ALTER TABLE Mensajero ADD CONSTRAINT CK_nroDocumento CHECK (k_nroDoc>0)
;

ALTER TABLE Mensajero ADD CONSTRAINT CK_sexo CHECK (i_sexo IN ('M','F'))
;

ALTER TABLE Mensajero ADD CONSTRAINT CK_tipoTransporte CHECK (i_tipoTransporte IN ('DC','PQ','PM','PG'))
;

ALTER TABLE Mensajero ADD CONSTRAINT CK_tipoMedio CHECK (i_tipoMedio IN ('M','B'))
;

ALTER TABLE PagoMensajero ADD CONSTRAINT PK_PagoMensajero
	PRIMARY KEY (k_idPago)
;

ALTER TABLE Servicio ADD CONSTRAINT PK_Servicio
	PRIMARY KEY (k_idServicio)
;

ALTER TABLE Servicio ADD CONSTRAINT CK_costo CHECK (V_costo>0)
;

ALTER TABLE Servicio ADD CONSTRAINT CK_idaYvuelta CHECK (I_idaYvuelta IN ('I','V'))
;

ALTER TABLE Servicio ADD CONSTRAINT CK_medioPago CHECK (i_medioPago IN ('E','P'))
;

ALTER TABLE Servicio ADD CONSTRAINT CK_calificacion CHECK (q_calificacion BETWEEN 1 AND 5	)
;

ALTER TABLE Servicio ADD CONSTRAINT CK_fechaCambioEstado CHECK (f_cambioEstado > f_inicial)
;

ALTER TABLE Tipo_Paquete ADD CONSTRAINT PK_Tipo_Paquete
	PRIMARY KEY (k_idTipoP)
;

ALTER TABLE Tipo_Paquete ADD CONSTRAINT CK_tarifaPaquete CHECK (q_tarifaPaquete>0)
;

ALTER TABLE Tipo_Paquete ADD CONSTRAINT CK_tipoPaquete CHECK (k_idTipoP IN ('DC','PQ','PM','PG'))
;

/* Create Foreign Key Constraints */

ALTER TABLE Direccion ADD CONSTRAINT FK_Direccion_Servicio
	FOREIGN KEY (k_idServicio) REFERENCES Servicio (k_idServicio) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE HorarioLaboral ADD CONSTRAINT FK_HorarioLaboral_Mensajero
	FOREIGN KEY (k_nroDoc,k_tipoDoc) REFERENCES Mensajero (k_nroDoc,k_tipoDoc) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE PagoMensajero ADD CONSTRAINT FK_PagoMensajero_Mensajero
	FOREIGN KEY (k_nroDoc,k_tipoDoc) REFERENCES Mensajero (k_nroDoc,k_tipoDoc) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Servicio ADD CONSTRAINT FK_Servicio_Ciudad
	FOREIGN KEY (k_idCiudad) REFERENCES Ciudad (k_idCiudad) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Servicio ADD CONSTRAINT FK_Servicio_Cliente
	FOREIGN KEY (k_tipoDocCli,k_nroDocCli) REFERENCES Cliente (k_tipoDoc,k_nroDoc) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Servicio ADD CONSTRAINT FK_Servicio_Mensajero
	FOREIGN KEY (k_nroDocMen,k_tipoDocMen) REFERENCES Mensajero (k_nroDoc,k_tipoDoc) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Servicio ADD CONSTRAINT FK_Servicio_Tipo_Paquete
	FOREIGN KEY (k_idTipoPaquete) REFERENCES Tipo_Paquete (k_idTipoP) ON DELETE No Action ON UPDATE No Action
;

/* Create Table Comments, Sequences for Autonumber Columns */

 

COMMENT ON TABLE Cliente
	IS 'Persona que ya está registrada y que puede solicitar un servicio.'
;

COMMENT ON COLUMN Cliente.k_tipoDoc
	IS 'Número único que identificará a cada cliente dentro del sistema.'
;

COMMENT ON COLUMN Cliente.n_nombres
	IS 'Nombres del cliente ya registrado en el sistema.'
;

COMMENT ON COLUMN Cliente.n_apellidos
	IS 'Apellidos del cliente ya registrado en el sistema.'
;

COMMENT ON COLUMN Cliente.o_email
	IS 'Correo electrónico asociado al cliente'
;

COMMENT ON COLUMN Cliente.q_telefonoCelular
	IS 'Número de teléfono asociado al cliente'
;

COMMENT ON TABLE Direccion
	IS 'Direccion(es) asociadas a un servicio solicitado'
;

COMMENT ON COLUMN Direccion.k_codigo
	IS 'Codigo de la dirección asociada a un servicio.'
;

COMMENT ON COLUMN Direccion.n_direccion
	IS 'Dirección en la que se debe realizar alguna actividad.'
;

COMMENT ON COLUMN Direccion.n_actividad
	IS 'Descripción de la actividad que se tendrá que realizar en una dirección'
;

COMMENT ON COLUMN Direccion.k_idServicio
	IS 'Identificador único del servicio asociado a las direcciones'
;

 

 

COMMENT ON COLUMN HorarioLaboral.n_nombreDia
	IS 'Domingo
Miercoles'
;

 

COMMENT ON COLUMN Mensajero.k_tipoDoc
	IS 'TI
CC
CE'
;

COMMENT ON COLUMN Mensajero.i_tipoTransporte
	IS 'DC
PQ
PM
PG'
;

COMMENT ON COLUMN Mensajero.i_tipoMedio
	IS 'B - Bicicleta
M - Motocicleta'
;

 

COMMENT ON TABLE Servicio
	IS 'Solicitud de un envío'
;

COMMENT ON COLUMN Servicio.k_idServicio
	IS 'Número único de identificación de un servicio asociado asociado a un cliente'
;

COMMENT ON COLUMN Servicio.f_inicial
	IS 'Fecha y hora en la que se inicia un servicio'
;

COMMENT ON COLUMN Servicio.i_idaYvuelta
	IS 'Indicador del tipo de servicio solicitador. Será <<I>> si el servicio es solo Ida, y será <<V>> si el servicio es de Ida y Vuelta.'
;

COMMENT ON COLUMN Servicio.v_costo
	IS 'Valor total del costo del servicio solicitado'
;

COMMENT ON COLUMN Servicio.f_cambioEstado
	IS 'Fecha en la que un mensajero Acepta, Finaliza o Reporta algún cambio en el servicio.'
;

COMMENT ON COLUMN Servicio.n_cmtCambioEstado
	IS 'Comentario asociado a la fecha en la que cambia el estado del servicio'
;

COMMENT ON COLUMN Servicio.i_medioPago
	IS 'Indicador del medio de pago del servicio. <<E>> será el indicador de pago en efectivo y <<P>> será el indicador para el pago por medio de PSE.'
;

 

 

COMMENT ON TABLE Tipo_Paquete
	IS 'Tamaño y costo del paquete para el servicio'
;

COMMENT ON COLUMN Tipo_Paquete.k_idTipoP
	IS 'DC
PQ
PM
PG'
;

COMMENT ON COLUMN Tipo_Paquete.n_nombreTipoP
	IS 'Nombre asociado al volumen del paquete'
;
